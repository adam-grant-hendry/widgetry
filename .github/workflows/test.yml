name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - python-version: "3.9"
            tox-env: "py39"
          - python-version: "3.10"
            tox-env: "py310"
          - python-version: "3.11"
            tox-env: "py311"
          - python-version: "3.12"
            tox-env: "py312"
      fail-fast: false

    defaults:
      run:
        shell: bash

    name: Test - ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Repository
        uses: actions/checkout@v4

      - name: Update Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update -y
          sudo apt install -y libgles2-mesa-dev

      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.6"
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: uv sync --frozen --extra typing --extra stubs --extra lint --extra tests --extra github

      - name: Install Tools
        run: |
          uv tool install tox --with tox-uv --force-reinstall

      - name: Run `pre-commit`
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Run Tests
        env:
          QT_QPA_PLATFORM: "offscreen"
        run: |
          uvx tox r -e ${{ matrix.tox-env }}

      - name: Upload Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.tox-env }}
          path: .coverage.${{ matrix.tox-env }}
          include-hidden-files: true

  coverage:
    name: Coverage
    needs: test

    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest

    steps:
      - name: Check out the Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.6"
          enable-cache: true
          python-version: 3.12

      - name: Install Dependencies
        run: |
          uv sync --frozen --extra tests --extra github

      - name: Install Tools
        run: |
          uv tool install tox --with tox-uv --force-reinstall

      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Combine Coverage Results
        run: |
          uvx tox r -e coverage

          export TOTAL=$(python -c "import json;print(json.load(open('logs/coverage/coverage.json'))['totals']['percent_covered_display'])")
          echo "total_coverage=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

      - name: Make Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          # `GIST_TOKEN` is a personal access token with a scope of "gist".
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 63337d00e9cc9095896ce87537c5541b
          filename: coverage_badge.json
          label: Coverage
          message: ${{ env.total_coverage }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total_coverage }}
